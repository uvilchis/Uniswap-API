type Event {
  symbol: String!
  ethPool: String!
  tokenPool: String!
  invariant: String!
  ethValueOfToken: String!
  createdAt: String
}

input NewEvent {
  symbol: String!
  ethPool: String!
  tokenPool: String!
  invariant: String!
  ethValueOfToken: String!
}

extend type Query {
  Event(input: String!, limit: Int): [Event]!
}

extend type Mutation {
  addEvent(input: NewEvent!): Event!
}


